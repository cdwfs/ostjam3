Menu
════════════════════════════════════════════════════════════════════════
const MENU_NEW_GAME = 0
const MENU_HOWTOPLAY = 1
const MENU_CREDITS = 2
const MENU_ITEMS = ["Play", "Help", "Credits"]

const MENU_ITEM_TEXT_ARGS = {font:menu_font, color:#ff0, x_align:"left", shadow:#0008}
const MENU_CURSOR_TEXT_ARGS = {font:menu_font, text:replace("(a)", gamepad_array[0].prompt),
    x_align:"right", color:#ff0, shadow:#0008}

def enter_setup_mode(data):
    set_mode(Play) because "selected New Game"
def enter_howtoplay_mode(data):
    set_mode(HowToPlay) because "View game rules"
def enter_credits_mode(data):
    set_mode(Credits) because "View credits"

let current_menu_item = 0
let disable_input = false

enter
────────────────────────────────────────────────────────────────────────
current_menu_item = MENU_NEW_GAME
disable_input = false

if not bgm_is_playing():
    song_start()

frame
────────────────────────────────────────────────────────────────────────
song_update()

// Handle cursor movement
if not disable_input and gamepad_array[0].yy ≠ 0:
    play_sound(SND_MENU_MOVE)
    current_menu_item = (current_menu_item + size(MENU_ITEMS) + gamepad_array[0].yy) % size(MENU_ITEMS)

// Handle menu selection
if not disable_input and gamepad_array[0].aa ≠ 0:
    if current_menu_item == MENU_NEW_GAME:
        disable_input = true
        play_sound(SND_MENU_ACCEPT)
        add_frame_hook(fade_out, enter_setup_mode, 30, ∅, {})
    else if current_menu_item == MENU_HOWTOPLAY:
        play_sound(SND_MENU_ACCEPT)
        add_frame_hook(fade_out, enter_howtoplay_mode, 30, nil, {})
    else if current_menu_item == MENU_CREDITS:
        play_sound(SND_MENU_ACCEPT)
        add_frame_hook(fade_out, enter_credits_mode, 30, nil, {})
        
// title screen stuff here
draw_sprite({sprite:title_sprite.bg, z:0, pos:xy(0,0)})
draw_sprite({sprite:title_sprite.fg, z:10, pos:xy(0,0)})
const title_pos = xy(101,0)
draw_text({text:"Portal Command", font:title_font, x_align:"left", y_align:"top",
    pos:title_pos, z:100, color:#ff0, shadow:#0008, })

local:
    let menu_offset = xy(320, 24)
    for menu_item at i in MENU_ITEMS:
        draw_text({text:menu_item, pos:menu_offset, z:100, ...MENU_ITEM_TEXT_ARGS}).y
        if current_menu_item == i:
            draw_text({pos:menu_offset - xy(4,0), z:100, ...MENU_CURSOR_TEXT_ARGS})
        menu_offset.y += menu_font.line_height
    for 0 ≤ i ≤ 34:
        const p = xy(290, 2*i)
        draw_line({A:p, B:p+xy(100,-1), color:#0203, z:100})
    
    const overlay_alpha = lerp(0, 0.25, noise(2, mode_frames/10), -1, 1)
    draw_corner_rect({corner:xy(290,0), size:xy(100,68), z:100, color:rgba(0,0,0, overlay_alpha)})

leave
────────────────────────────────────────────────────────────────────────
reset_post_effects()
remove_frame_hooks_by_mode(get_mode())
